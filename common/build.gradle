architectury {
    common(rootProject.enabled_platforms.split(","))
}
loom {
    accessWidenerPath =  file("src/main/resources/puzzle-models.accesswidener")
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modCompileOnly "maven.modrinth:midnightlib:${rootProject.midnightlib_version}-fabric"

    modCompileOnly "org.quiltmc:quilt-loader:${rootProject.quilt_loader_version}"
    modCompileOnlyApi "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${rootProject.quilt_fabric_api_version}"
    modCompileOnlyApi ("org.aperlambda:lambdajcommon:1.8.1") {
        exclude group: 'com.google.code.gson'
        exclude group: 'com.google.guava'
    }
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
